<program>
└── <func-decl>
    ├── void
    ├── main
    ├── <para-list>
    │   ├── (
    │   └── )
    └── <compound-stmt>
        ├── {
        ├── <var-decl-list>
        │   ├── <var-decl>
        │   │   ├── int
        │   │   ├── i
        │   │   └── ;
        │   └── <var-decl>
        │       ├── int
        │       ├── j
        │       └── ;
        ├── <stmt-list>
        │   ├── <if-stmt>
        │   │   ├── if
        │   │   ├── (
        │   │   ├── <assign-expr>
        │   │   │   ├── i
        │   │   │   └── <assign-expr-t>
        │   │   │       ├── =
        │   │   │       └── 2
        │   │   ├── )
        │   │   └── <compound-stmt>
        │   │       ├── {
        │   │       ├── <expr-stmt>
        │   │       │   ├── <assign-expr>
        │   │       │   │   ├── i
        │   │       │   │   └── <assign-expr-t>
        │   │       │   │       ├── =
        │   │       │   │       └── 2
        │   │       │   └── ;
        │   │       └── }
        │   └── <stmt-list>
        │       ├── <if-stmt>
        │       │   ├── if
        │       │   ├── (
        │       │   ├── <equality-expr>
        │       │   │   ├── i
        │       │   │   └── <equality-expr-t>
        │       │   │       ├── ==
        │       │   │       └── 3
        │       │   ├── )
        │       │   ├── <compound-stmt>
        │       │   │   ├── {
        │       │   │   ├── <expr-stmt>
        │       │   │   │   ├── <assign-expr>
        │       │   │   │   │   ├── i
        │       │   │   │   │   └── <assign-expr-t>
        │       │   │   │   │       ├── =
        │       │   │   │   │       └── 3
        │       │   │   │   └── ;
        │       │   │   └── }
        │       │   └── <else-stmt>
        │       │       ├── else
        │       │       └── <if-stmt>
        │       │           ├── if
        │       │           ├── (
        │       │           ├── <equality-expr>
        │       │           │   ├── i
        │       │           │   └── <equality-expr-t>
        │       │           │       ├── ==
        │       │           │       └── 2
        │       │           ├── )
        │       │           └── <compound-stmt>
        │       │               ├── {
        │       │               ├── <expr-stmt>
        │       │               │   ├── <assign-expr>
        │       │               │   │   ├── i
        │       │               │   │   └── <assign-expr-t>
        │       │               │   │       ├── =
        │       │               │   │       └── <additive-expr>
        │       │               │   │           ├── 1
        │       │               │   │           └── <additive-expr-t>
        │       │               │   │               ├── +
        │       │               │   │               ├── <multiplicative-expr>
        │       │               │   │               │   ├── 2
        │       │               │   │               │   └── <multiplicative-expr-t>
        │       │               │   │               │       ├── *
        │       │               │   │               │       ├── 3
        │       │               │   │               │       └── <multiplicative-expr-t>
        │       │               │   │               │           ├── /
        │       │               │   │               │           └── 4
        │       │               │   │               └── <additive-expr-t>
        │       │               │   │                   ├── -
        │       │               │   │                   └── 5
        │       │               │   └── ;
        │       │               └── }
        │       └── <stmt-list>
        │           ├── <if-stmt>
        │           │   ├── if
        │           │   ├── (
        │           │   ├── <equality-expr>
        │           │   │   ├── i
        │           │   │   └── <equality-expr-t>
        │           │   │       ├── ==
        │           │   │       └── 2
        │           │   ├── )
        │           │   └── <compound-stmt>
        │           │       ├── {
        │           │       └── }
        │           └── <for-stmt>
        │               ├── for
        │               ├── (
        │               ├── <assign-expr>
        │               │   ├── i
        │               │   └── <assign-expr-t>
        │               │       ├── =
        │               │       └── 1
        │               ├── ;
        │               ├── <relational-expr>
        │               │   ├── i
        │               │   └── <relational-expr-t>
        │               │       ├── <
        │               │       └── 1
        │               ├── ;
        │               ├── <assign-expr>
        │               │   ├── i
        │               │   └── <assign-expr-t>
        │               │       ├── =
        │               │       └── <additive-expr>
        │               │           ├── i
        │               │           └── <additive-expr-t>
        │               │               ├── +
        │               │               └── 1
        │               ├── )
        │               └── <compound-stmt>
        │                   ├── {
        │                   └── }
        └── }
